{"version":3,"sources":["store/AppContext.jsx","components/TaskItem/TaskItem.jsx","components/TasksList/TasksList.jsx","components/TaskForm/TaskForm.jsx","screens/TasksScreen.jsx","App.jsx","index.js"],"names":["AppContext","React","createContext","AppContextWrapper","children","useState","tasks","setTasks","state","setTaskStatus","id","status","tasksUpdated","map","task","completed","deleteTask","filter","saveTask","Provider","value","displayName","TaskItem","title","isUpdating","setIsUpdating","text","setText","useContext","Card","className","Checkbox","checked","onChange","event","target","TextField","label","IconButton","color","onClick","disabled","length","TasksList","TaskForm","onSubmit","uuidv1","preventDefault","selected","userId","required","e","Button","type","startIcon","TasksScreen","loadTasks","a","axios","get","response","data","slice","console","log","message","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b61c9ff2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst AppContext = React.createContext();\n\nexport const AppContextWrapper = ({ children }) => {\n  const [tasks, setTasks] = useState([]);\n\n  const setTaskStatus = (id, status) => {\n    const tasksUpdated = tasks.map((task) => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: status,\n        };\n      }\n      return task;\n    });\n    setTasks(tasksUpdated);\n  };\n\n  const deleteTask = (id) => {\n    const tasksUpdated = tasks.filter((task) => task.id !== id);\n    setTasks(tasksUpdated);\n  };\n\n  const saveTask = (task) => {\n    const tasksUpdated = [...tasks, task];\n    setTasks(tasksUpdated);\n  };\n\n  const state = { tasks, setTasks, setTaskStatus, deleteTask, saveTask };\n\n  return (\n    <AppContext.Provider value={state} displayName=\"AppContext\">\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;\n","import React, { useContext, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport \"./TaskItem.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst TaskItem = ({ id, title, completed }) => {\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [text, setText] = useState(title);\r\n\r\n  const state = useContext(AppContext);\r\n  const handleCheck = (event) => {\r\n    state.setTaskStatus(id, event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    state.deleteTask(id);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"taskItem\">\r\n      <div className=\"taskItem__checkbox\">\r\n        <Checkbox checked={completed} onChange={handleCheck} />\r\n      </div>\r\n      <div className=\"taskItem__title\">\r\n        {isUpdating ? (\r\n          <TextField\r\n            className=\"taskItem__input\"\r\n            label=\"task...\"\r\n            value={text}\r\n            onChange={handleChange}\r\n          />\r\n        ) : (\r\n          <p>{text}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"taskItem__buttons\">\r\n        {isUpdating ? (\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => setIsUpdating(false)}\r\n            disabled={!text.length}\r\n          >\r\n            <SaveIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton color=\"primary\" onClick={() => setIsUpdating(true)}>\r\n            <UpdateIcon />\r\n          </IconButton>\r\n        )}\r\n\r\n        <IconButton color=\"secondary\" onClick={handleDelete}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React, { useContext } from \"react\";\nimport AppContext from \"../../store/AppContext\";\nimport TaskItem from \"../TaskItem/TaskItem\";\nimport \"./TasksList.scss\";\n\nconst TasksList = () => {\n  const state = useContext(AppContext);\n\n  return (\n    <div className=\"TasksList\">\n      {state.tasks.map((task) => (\n        <TaskItem\n          key={task.id}\n          id={task.id}\n          title={task.title}\n          completed={task.completed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TasksList;\n","import React, { useContext, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./TaskForm.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\n\r\nconst TaskForm = () => {\r\n  const state = useContext(AppContext);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleSave = (event) => {\r\n    const id = uuidv1();\r\n    event.preventDefault();\r\n    const task = { id: id, title: text, selected: false, userId: id };\r\n    state.saveTask(task);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSave}>\r\n      <TextField\r\n        className=\"taskForm__input\"\r\n        required\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        id=\"taskForm__input\"\r\n        label=\"Agrega un titulo a la tarea\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        startIcon={<SaveIcon />}\r\n        disabled={!text.length}\r\n      >\r\n        Guardar\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport AppContext from \"../store/AppContext\";\nimport TasksList from \"../components/TasksList/TasksList\";\nimport \"./TasksScreen.scss\";\nimport TaskForm from \"../components/TaskForm/TaskForm\";\n\nconst TasksScreen = () => {\n  const state = useContext(AppContext);\n\n  const loadTasks = async () => {\n    try {\n      const response = await axios.get(\n        \"https://jsonplaceholder.typicode.com/todos\"\n      );\n      const tasks = response.data.slice(0, 5);\n      console.log(tasks);\n      state.setTasks(tasks);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  return (\n    <div className=\"tasksScreen\">\n      <TaskForm />\n      <TasksList />\n    </div>\n  );\n};\n\nexport default TasksScreen;\n","import React from \"react\";\nimport { AppContextWrapper } from \"./store/AppContext\";\nimport TasksScreen from \"./screens/TasksScreen\";\n\nconst App = () => {\n  return (\n    <AppContextWrapper>\n      <TasksScreen />\n    </AppContextWrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}