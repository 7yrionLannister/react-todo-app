{"version":3,"sources":["constants/sort.js","store/AppContext.jsx","components/TaskItem/TaskItem.jsx","components/TasksList/TasksList.jsx","components/TaskForm/TaskForm.jsx","services/getTasks.js","components/TasksSorter/TasksSorter.jsx","screens/TasksScreen.jsx","App.jsx","index.js"],"names":["SORT_TYPE_ASC","SORT_TYPE_DESC","sortLabels","AppContext","React","createContext","AppContextWrapper","children","useState","tasks","setTasks","state","setTaskStatus","id","status","tasksUpdated","map","task","completed","deleteTask","filter","saveTask","sortTasks","sortType","tasksCopy","sort","a","b","title","Provider","value","displayName","TaskItem","useContext","isUpdating","setIsUpdating","text","setText","Card","className","Checkbox","checked","onChange","event","target","TextField","label","IconButton","color","onClick","disabled","length","TasksList","TaskForm","onSubmit","uuidv1","preventDefault","selected","userId","required","e","Button","type","startIcon","getTasks","axios","get","response","data","slice","TasksSorter","setSortType","useEffect","Select","native","sortLabel","TasksScreen","loadTasks","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a86f798.chunk.js","sourcesContent":["export const SORT_TYPE_ASC = \"Ascendente\";\r\nexport const SORT_TYPE_DESC = \"Descendente\";\r\nexport const sortLabels = [SORT_TYPE_ASC, SORT_TYPE_DESC];\r\n","import React, { useState } from \"react\";\nimport { SORT_TYPE_ASC, SORT_TYPE_DESC } from \"../constants/sort\";\n\nconst AppContext = React.createContext();\n\nexport const AppContextWrapper = ({ children }) => {\n  const [tasks, setTasks] = useState([]);\n\n  const setTaskStatus = (id, status) => {\n    const tasksUpdated = tasks.map((task) => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: status,\n        };\n      }\n      return task;\n    });\n    setTasks(tasksUpdated);\n  };\n\n  const deleteTask = (id) => {\n    const tasksUpdated = tasks.filter((task) => task.id !== id);\n    setTasks(tasksUpdated);\n  };\n\n  const saveTask = (task) => {\n    const tasksUpdated = [...tasks, task];\n    setTasks(tasksUpdated);\n  };\n\n  const sortTasks = (sortType) => {\n    const tasksCopy = tasks.map((task) => task);\n    if (sortType === SORT_TYPE_ASC) {\n      tasksCopy.sort((a, b) => (a.title > b.title ? 1 : -1));\n    } else if (sortType === SORT_TYPE_DESC) {\n      tasksCopy.sort((a, b) => (a.title < b.title ? 1 : -1));\n    }\n    setTasks(tasksCopy);\n  };\n\n  const state = {\n    tasks,\n    setTasks,\n    setTaskStatus,\n    deleteTask,\n    saveTask,\n    sortTasks,\n  };\n\n  return (\n    <AppContext.Provider value={state} displayName=\"AppContext\">\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default AppContext;\n","import React, { useContext, useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport \"./TaskItem.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nconst TaskItem = ({ id, title, completed }) => {\r\n  const state = useContext(AppContext);\r\n\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [text, setText] = useState(title);\r\n\r\n  const handleCheck = (event) => {\r\n    state.setTaskStatus(id, event.target.checked);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    state.deleteTask(id);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"taskItem\">\r\n      <div className=\"taskItem__checkbox\">\r\n        <Checkbox checked={completed} onChange={handleCheck} />\r\n      </div>\r\n      <div className=\"taskItem__title\">\r\n        {isUpdating ? (\r\n          <TextField\r\n            className=\"taskItem__input\"\r\n            label=\"Tarea...\"\r\n            value={text}\r\n            onChange={handleChange}\r\n          />\r\n        ) : (\r\n          <p>{text}</p>\r\n        )}\r\n      </div>\r\n      <div className=\"taskItem__buttons\">\r\n        {isUpdating ? (\r\n          <IconButton\r\n            color=\"primary\"\r\n            onClick={() => setIsUpdating(false)}\r\n            disabled={!text.length}\r\n          >\r\n            <SaveIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton color=\"primary\" onClick={() => setIsUpdating(true)}>\r\n            <UpdateIcon />\r\n          </IconButton>\r\n        )}\r\n\r\n        <IconButton color=\"secondary\" onClick={handleDelete}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import React, { useContext } from \"react\";\nimport AppContext from \"../../store/AppContext\";\nimport TaskItem from \"../TaskItem/TaskItem\";\nimport \"./TasksList.scss\";\n\nconst TasksList = () => {\n  const state = useContext(AppContext);\n\n  return (\n    <div className=\"TasksList\">\n      {state.tasks.map((task) => (\n        <TaskItem\n          key={task.id}\n          id={task.id}\n          title={task.title}\n          completed={task.completed}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TasksList;\n","import React, { useContext, useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"./TaskForm.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport { v1 as uuidv1 } from \"uuid\";\r\n\r\nconst TaskForm = () => {\r\n  const state = useContext(AppContext);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleSave = (event) => {\r\n    const id = uuidv1();\r\n    event.preventDefault();\r\n    const task = { id: id, title: text, selected: false, userId: id };\r\n    state.saveTask(task);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSave}>\r\n      <TextField\r\n        className=\"taskForm__input\"\r\n        required\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        id=\"taskForm__input\"\r\n        label=\"Agrega un titulo a la tarea\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        startIcon={<SaveIcon />}\r\n        disabled={!text.length}\r\n      >\r\n        Guardar\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import axios from \"axios\";\r\n\r\nconst getTasks = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/todos\"\r\n    );\r\n    const tasks = response.data.slice(0, 5);\r\n    return tasks;\r\n  } catch (error) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default getTasks;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport \"./TasksSorter.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport { sortLabels } from \"../../constants/sort\";\r\n\r\nconst TasksSorter = () => {\r\n  const state = useContext(AppContext);\r\n\r\n  const [sortType, setSortType] = useState(sortLabels[0]);\r\n\r\n  useEffect(() => {\r\n    state.sortTasks(sortType);\r\n  }, [sortType]);\r\n\r\n  return (\r\n    <div className=\"tasksSorter\">\r\n      <Select\r\n        native\r\n        value={sortType}\r\n        onChange={(event) => setSortType(event.target.value)}\r\n      >\r\n        {sortLabels.map((sortLabel) => (\r\n          <option key={sortLabel} value={sortLabel}>\r\n            {sortLabel}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksSorter;\r\n","import React, { useContext, useEffect } from \"react\";\nimport AppContext from \"../store/AppContext\";\nimport TasksList from \"../components/TasksList/TasksList\";\nimport \"./TasksScreen.scss\";\nimport TaskForm from \"../components/TaskForm/TaskForm\";\nimport getTasks from \"../services/getTasks\";\nimport TasksSorter from \"../components/TasksSorter/TasksSorter\";\n\nconst TasksScreen = () => {\n  const state = useContext(AppContext);\n\n  const loadTasks = async () => {\n    const tasks = await getTasks();\n    state.setTasks(tasks);\n  };\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  return (\n    <div className=\"tasksScreen\">\n      <TaskForm />\n      <TasksSorter />\n      <TasksList />\n    </div>\n  );\n};\n\nexport default TasksScreen;\n","import React from \"react\";\nimport { AppContextWrapper } from \"./store/AppContext\";\nimport TasksScreen from \"./screens/TasksScreen\";\n\nconst App = () => {\n  return (\n    <AppContextWrapper>\n      <TasksScreen />\n    </AppContextWrapper>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}